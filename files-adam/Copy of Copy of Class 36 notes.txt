All configuration will end with .tf

provider {
}

resource {
}

$ curl -O https://releases.hashicorp.com/terraform/0.11.0/terraform_0.11.0_linux_amd64.zip
 $ apt install -y unzip
 $ unzip terraform_0.11.0_linux_amd64.zip -d /usr/local/bin/
 $ terraform version

Intepolation: <Resource_type>.<ResourceName>.<Attributes>

$ terraform init
$ terraform validate
$ terraform plan
 + -> create the resource
 - -> destroy the resource
 ~ -> modify the resource

$ terraform apply --auto-approve
$ terraform show
$ terraform destroy
======================================================================
# Specify the Docker host
provider "docker" {
  host = "unix:///var/run/docker.sock"
}

# Download the latest Centos image
resource "docker_image" "myimg" {
  name = "nginx:latest"
}

# Start the Container
resource "docker_container" "mycontainer" {
  name  = "testng"
  image = "${docker_image.myimg.latest}"
  ports {
    internal = "80"
    external = "80"
  }
}
=======================
export AWS_ACCESS_KEY_ID=(your access key id)
export AWS_SECRET_ACCESS_KEY=(your secret access key)
==============

-----------------
provider "aws" {
  region = "ap-south-1"
}

# Specify the EC2 details
resource "aws_instance" "example" {
  ami           = "ami-0b99c7725b9484f9e"
  instance_type = "t2.micro"

  depends_on = ["aws_s3_bucket.example"]
}

resource "aws_eip" "ip" {
  instance = "${aws_instance.example.id}"
}

resource "aws_s3_bucket" "example" {
  bucket = "wezva-adam-demo-s3"
}



Thanks & Regards,

*Ajitha Gomathi*
*WEZVA Coordinator* | Mob : +91-9739110917
