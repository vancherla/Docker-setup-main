===================================
  provisioner "local-exec" {
    command    = "echo 'while true; do echo hi-students; sleep 5; done' > myscript.sh"
  }
 
  provisioner "file" {
    source      = "myscript.sh"
    destination = "/tmp/myscript.sh"
  }

  provisioner "remote-exec" {
    inline = [
      "chmod +x /tmp/myscript.sh",
      "nohup /tmp/myscript.sh 2>&1 &",
    ]
  }
=================================
resource "aws_instance" "example" {
  ami           = "ami-0927ed83617754711"
  instance_type = "t2.micro"
  key_name      = "wezvatech"

# Install Ansible & Call Ansible
  provisioner "remote-exec" {
    inline = [
     "sudo apt -y update",
     "sudo apt install -y ansible",
     "sudo ansible --version"
    ]
  }

  connection {
    type     = "ssh"
    user     = "ubuntu"
    private_key = file("wezvatech.pem")
    host     = self.public_ip
  }
}
=====================
provider "aws" {
  region = "ap-south-1"
}

#--------------
# Create a VPC
#--------------

resource "aws_vpc" "my_vpc" {
  cidr_block       = var.vpc_cidr
  enable_dns_hostnames = true

  tags = {
    Name = "DEMO VPC"
  }
}

#-----------------------------------------
# Create a public subnet on AZ ap-south-1b
#-----------------------------------------
resource "aws_subnet" "public_ap_south_1a" {
  vpc_id     = aws_vpc.my_vpc.id
  cidr_block = var.subnet1_cidr
  availability_zone = var.subnet1_az

  tags = {
    Name = "Public Subnet ap-south-1b"
  }
}

#-----------------------------------------
# Create a public subnet on AZ ap-south-1a
#-----------------------------------------
resource "aws_subnet" "public_ap_south_1b" {
  vpc_id     = aws_vpc.my_vpc.id
  cidr_block = var.subnet2_cidr
  availability_zone = var.subnet1_az

  tags = {
    Name = "Public Subnet ap-south-1a"
  }
}

#-------------------------------
# Create an IGW for your new VPC
#-------------------------------
resource "aws_internet_gateway" "my_vpc_igw" {
  vpc_id = aws_vpc.my_vpc.id

  tags = {
    Name = "DEMO VPC - Internet Gateway"
  }
}

#----------------------------------
# Create an RouteTable for your VPC
#----------------------------------
resource "aws_route_table" "my_vpc_public" {
    vpc_id = aws_vpc.my_vpc.id

    route {
        cidr_block = "0.0.0.0/0"
        gateway_id = aws_internet_gateway.my_vpc_igw.id
    }

    tags = {
        Name = "Public Subnets Route Table for DEMO VPC"
    }
}

#--------------------------------------------------------------
# Associate the RouteTable to the Subnet created at ap-south-1a
#--------------------------------------------------------------
resource "aws_route_table_association" "my_vpc_ap_south_1a_public" {
    subnet_id = aws_subnet.public_ap_south_1a.id
    route_table_id = aws_route_table.my_vpc_public.id
}

#--------------------------------------------------------------
# Associate the RouteTable to the Subnet created at ap-south-1b
#--------------------------------------------------------------
resource "aws_route_table_association" "my_vpc_ap_south_1b_public" {
    subnet_id = aws_subnet.public_ap_south_1b.id
    route_table_id = aws_route_table.my_vpc_public.id
}

===================
variable "vpc_cidr" {
  default     = "10.0.0.0/16"
}

variable "subnet1_cidr" {
  default     = "10.0.0.0/24"
}

variable "subnet1_az" {
  default     = "ap-south-1b"
}

variable "subnet2_cidr" {
  default     = "10.0.1.0/24"
}

variable "subnet2_az" {
  default     = "ap-south-1a"
}
Thanks & Regards,

*Ajitha Gomathi*
*WEZVA Coordinator* | Mob : +91-9739110917
